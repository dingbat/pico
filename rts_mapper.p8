pico-8 cartridge // http://www.pico-8.com
version 39
__lua__
cartdata"aoa_mapper"

cls()
flip()

mapw=48
maph=32
pos={}

pid_codes={
	h=1, --h: mound (hill)
	f=2, --f: farm
	b=3, --b: barracks
	d=4, --d: den
	m=5, --m: monastary
	t=6, --t: tower
	c=7, --c: castle
	
	--$: wild ladybug, created at
	--   tile x,y at start of game.
	["$"]=10,
	
	--%: percentage of workers on
	--   wood. must be first order
	--   val:1=64%,2=58%,3=50%
	["%"]=11,
	
	-->b/g: position (at x,y) of
	--      large cluster of that
	--      resource. goes to next
	--      (in order) if runs out
 -- must have p>3!
	["grp>b"]=98,
	["grp>g"]=103,
	
	--exit: stop orders for
	--      difficulties <= p
	exit=153,
	
	--tech: *_n (n=tech idx)
	--      for difficulties >= x
	--      y=0 ‚ñ∂ free, y=1 ‚ñ∂ paid
}

--step_mode=4
--debug_pos={4}

function _init()
--	derender()
	
	if step_mode then
		poke(0x5f2d,3)
		render(step_mode,step)
	 return
	end
	
--	analyze()
 reset_to_rts()
 write_self()

--	printa(pos[1])
	if debug_pos then
		render(debug_pos[1])
	end

--	encode_bo()
-- write_self()

--	render(1)
--	render(2)
--	render(3)
--	render(4)
--	write_self()

--	write_bo_to_rts()
--	write_map_to_rts()

	print("\ndone.",11)
end

step=max(dget(0),26)
cx=dget(1)
cy=dget(2)
function _update()
	if step_mode then
		prevstep=step
		
		if (btnp(‚ùé)) step+=1
		if (btnp(üÖæÔ∏è)) step-=1
		if (btnp(‚¨ÖÔ∏è)) cx-=1
		if (btnp(‚û°Ô∏è)) cx+=1
		if (btnp(‚¨ÜÔ∏è)) cy-=1
		if (btnp(‚¨áÔ∏è)) cy+=1
		cx=mid(cx,0,mapw-1)
		cy=mid(cy,0,maph-1)
		step=mid(step,1,#pos[step_mode])
		mx,my=stat"32",stat"33"
		mx8,my8=mx\8*8,my\8*8
		
		dset(1,cx)
		dset(2,cy)

		if prevstep!=step then
			dset(0,step)
			derender()
			render(step_mode,step)
		end
	end
end

function _draw()
	if step_mode then
		local p=pos[step_mode]
		cls()
		map(cx,cy-1)
		rectfill(0,0,128,8,8)
		rectfill(0,119,128,128,8)
		print(
			"pos "..step_mode..
			" ‚òÖ bo #"..step..
			" ("..p[step][3]..")"..
			" @ "..p[step][1]..","..
				p[step][2],
			2,121,7)
		rect(mx8,my8,mx8+8,my8+8,7)
		spr(186,mx,my)
		print(mx\8+cx ..","..
			my\8+cy-1,2,2,7)
	end
end

function reset_to_rts()
	print("loading from rts")
	reload(0x2000,0x2000,0x2000,
		"rts.p8")
	reload(0,0,0x1000,"rts.p8")
end

function chain()
	memcpy(0x8000,0x2000,0x1000)
	load("rts.p8",nil,"map")
end

function encode_bo()
	derender()
	if debug_pos then
		print("warning: debug_pos is on!",8)
		print("only encoding those positions!",10)
	end
	
	print("encoding bo data",6)
	local data={
		bo,unpack(pos)
	}
	
	for y=0,31 do
		--clear out bo section
		memset(0x2060+y*128,0,32)
		--fill fog
		memset(0x2030+y*128,67,48)
	end
	
	for i,a in inext,data do
		i-=1
		encode(a,0x2060+i*128*6)
	end
end

function write_self()
	--write to own cart
	cstore()
	print("\nwrote to own cart\n",5)
	color(6)
end

function write_bo_to_rts()
	encode_bo()

	for y=0,31 do
		cstore(
			0x2060+y*128,
			0x2060+y*128,
			32,
			"rts.p8")
	end
	
	print("wrote encoded bo to rts.p8",12)
	color(6)
end

function write_map_to_rts()
	derender()
	 
	for y=0,31 do
		cstore(
			0x2000+y*128,
			0x2000+y*128,
			48,
			"rts.p8")
	end
	
	print("wrote map to rts.p8",12)
	color(6)
end

function encode(a,o)
	for i,v in inext,a do
		i-=1
		i*=2
		local off=o+i%32+i\32*128
		poke(off,v[1],v[2])
	end
end

function loada(str)
	local a={}
	for l in all(split(str,"\n")) do
		local v=split(l)
		if (v[1]!="") add(a,v)
		if (v[1]=="debug") break
	end
	assert(#a<=96,"too many instructions, max 96!")
	return a
end

function code_to_pid(str)
	local val=deli(split(str,"_"))
	return pid_codes[val] or val
end

function loadbo(str)
	local a=loada(str)
	foreach(a,
		function(p)
			--convert codes to pid num
			p[2]=code_to_pid(p[2])
		end
	)
	return a
end

function addpos(str)
	if debug_pos then
		if count(debug_pos,#pos+1)==0 then
			add(pos,{})
			return
		end
	end

	local a=add(pos,{})
	for i,xy in inext,loada(str) do
		if xy[1]=="debug" then
			print("found debug!",8)
			color(6)
			return
		end
		local ctx="[pos "..#pos.." entry "..i.."]: "
		--remove comment
		local comment=deli(xy,1)
		local comment_pid=
			code_to_pid(comment)
		local bo_ent=bo[i]
		assert(bo_ent,ctx.."no corresponding order")
		local p,pid=unpack(bo_ent)
		assert(
			comment_pid==pid,
			ctx..
				"pid mismatch! bo:"..
				pid.." vs pos:"..
				comment_pid.." ('"..
				comment.."')"
		)
		if #xy==0 then
			assert(pid>7,ctx.."x,y required")
			xy[1],xy[2]=0,0
		elseif #xy==1 then
			xy[2]=0
		end
		-- add comment back in for
		-- step mode
		add(xy,comment)
		add(a,xy)
	end
	
	assert(
		#a==#bo,
		"pos "..#pos.." has "..#a.." orders (needs "..#bo..")")
end

function printa(a)
	local str=""
	for i,v in inext,a do
		local x,y=unpack(v)
--		local bld=bo[i][2]
--		local val=("mfbdtc")[bld]
--		str..=val..","..x..","..y.."\n"
		str..=tostr(x)..","..
			tostr(y).."\n"
	end
	printh(str,"@clip")
	print("data copied to clip")
end
-->8
bo=loadbo[[0,ladyb_$
0,ladyb_$
0,ladyb_$
0,ladyb_$
0,ladyb_$
0,ladyb_$
0,ladyb_$
0,ladyb_$
0,grp>b
0,grp>b
0,grp>b
0,grp>b
0,grp>b
0,grp>b
0,grp>g
0,grp>g
0,grp>g
0,grp>g
0,grp>g
0,grp>g
0,hard_tech_basket_15
0,hard_tech_heal_22
0,hard_tech_warant_20
0,hard_tech_archer_21
0,hard_tech_beetle_16
0,hard_tech_spider_17
0,hard_tech_monk_27
0,hard_tech_farm_18
5,h
8,h
8,b
11,h
12,t
15,f
16,h
16,f
16,f
16,f
16,f
21,h
21,med_tech_basket_15
21,hard_tech_basket_15
22,d
23,h
23,f
24,f
25,h
26,c
0,easy_exit
31,h
31,m
31,med_tech_warant_21
31,hard_tech_warant_21
31,med_tech_archer_22
31,hard_tech_archer_22
32,b
34,d
36,h
39,c
40,h
43,h
43,c
43,med_tech_heal_23
44,med_tech_beetle_17
44,hard_tech_beetle_17
45,med_tech_spider_18
45,hard_tech_spider_18
45,t
48,h
49,b
50,t
52,d
53,h
53,t
57,h
58,med_tech_cstl_23
58,hard_tech_cstl_23
62,med_tech_warant_21
62,hard_tech_warant_21
64,med_tech_archer_22
64,hard_tech_archer_22
66,med_tech_beetle_17
66,hard_tech_beetle_17
68,med_tech_spider_18
68,hard_tech_spider_18
70,med_tech_monk_27
70,hard_tech_monk_27
0,2_exit
75,c
75,h
80,c
0,3_exit]]
-->8
addpos[[ladyb_$,15,5
ladyb_$,24,7
ladyb_$,30,5
ladyb_$,23,16
ladyb_$,29,24
ladyb_$,17,22
ladyb_$,40,15
ladyb_$,8,16
grp>b,4,5
grp>b,13,2
grp>b,11,9
grp>b,20,7
grp>b,22,17
grp>b,31,9
grp>g,8,3
grp>g,17,5
grp>g,18,9
grp>g,10,13
grp>g,23,18
grp>g,29,6
hard_tech_basket_15,3,0
hard_tech_heal_22,3,0
hard_tech_warant_20,3,0
hard_tech_archer_21,3,0
hard_tech_beetle_16,3,0
hard_tech_spider_17,3,0
hard_tech_monk_27,3,0
hard_tech_farm_18,3,0
h,4,4
h,8,2
b,9,7
h,9,4
t,11,6
f,6,6
h,11,10
f,6,4
f,7,4
f,5,5
f,5,6
h,1,8
med_tech_basket_15,2,1
hard_tech_basket_15,3,1
d,9,6
h,3,5
f,5,4
f,8,4
h,5,3
c,8,9
easy_exit,1
h,14,2
m,7,7
med_tech_warant_21,2,1
hard_tech_warant_21,3,1
med_tech_archer_22,2,1
hard_tech_archer_22,3,1
b,8,8
d,7,8
h,0,5
c,13,5
h,17,4
h,16,9
c,4,8
med_tech_heal_23,2,1
med_tech_beetle_17,2,1
hard_tech_beetle_17,3,1
med_tech_spider_18,2,1
hard_tech_spider_18,3,1
t,12,8
h,10,14
b,15,7
t,17,6
d,15,6
h,22,7
t,7,12
h,9,0
med_tech_cstl_23,2,1
hard_tech_cstl_23,3,1
med_tech_warant_21,2,1
hard_tech_warant_21,3,1
med_tech_archer_22,2,1
hard_tech_archer_22,3,1
med_tech_beetle_17,2,1
hard_tech_beetle_17,3,1
med_tech_spider_18,2,1
hard_tech_spider_18,3,1
med_tech_monk_27,2,1
hard_tech_monk_27,3,1
exit,2
c,18,7
h,5,15
c,8,12
exit,3]]
-->8
addpos[[ladyb_$,15,5
ladyb_$,24,7
ladyb_$,30,5
ladyb_$,23,16
ladyb_$,29,24
ladyb_$,17,22
ladyb_$,40,15
ladyb_$,8,16
grp>b,42,3
grp>b,36,7
grp>b,34,2
grp>b,28,8
grp>b,37,20
grp>b,27,21
grp>g,42,7
grp>g,32,4
grp>g,29,10
grp>g,39,17
grp>g,21,6
grp>g,23,17
hard_tech_basket_15,3,0
hard_tech_heal_22,3,0
hard_tech_warant_20,3,0
hard_tech_archer_21,3,0
hard_tech_beetle_16,3,0
hard_tech_spider_17,3,0
hard_tech_monk_27,3,0
hard_tech_farm_18,3,0
h,43,3
h,43,6
b,38,6
h,44,3
t,36,5
f,41,4
h,36,8
f,40,4
f,42,4
f,42,5
f,41,6
h,32,2
med_tech_basket_15,2,1
hard_tech_basket_15,3,1
d,38,5
h,45,5
f,39,5
f,39,4
h,45,10
c,39,8
easy_exit,1
h,31,10
m,38,4
med_tech_warant_21,2,1
hard_tech_warant_21,3,1
med_tech_archer_22,2,1
hard_tech_archer_22,3,1
b,37,7
d,37,4
h,29,5
c,34,5
h,42,12
h,39,16
c,38,2
med_tech_heal_23,2,1
med_tech_beetle_17,2,1
hard_tech_beetle_17,3,1
med_tech_spider_18,2,1
hard_tech_spider_18,3,1
t,42,8
h,41,3
b,41,8
t,31,6
d,39,6
h,26,8
t,41,12
h,43,5
med_tech_cstl_23,2,1
hard_tech_cstl_23,3,1
med_tech_warant_21,2,1
hard_tech_warant_21,3,1
med_tech_archer_22,2,1
hard_tech_archer_22,3,1
med_tech_beetle_17,2,1
hard_tech_beetle_17,3,1
med_tech_spider_18,2,1
hard_tech_spider_18,3,1
med_tech_monk_27,2,1
hard_tech_monk_27,3,1
exit,2
c,40,10
h,36,3
c,33,3
exit,3]]
-->8
addpos[[ladyb_$,15,5
ladyb_$,24,7
ladyb_$,30,5
ladyb_$,23,16
ladyb_$,29,24
ladyb_$,17,22
ladyb_$,40,15
ladyb_$,8,16
grp>b,41,28
grp>b,34,23
grp>b,42,19
grp>b,27,22
grp>b,25,13
grp>b,38,10
grp>g,41,23
grp>g,32,29
grp>g,38,19
grp>g,42,14
grp>g,22,18
grp>g,27,14
hard_tech_basket_15,3,0
hard_tech_heal_22,3,0
hard_tech_warant_20,3,0
hard_tech_archer_21,3,0
hard_tech_beetle_16,3,0
hard_tech_spider_17,3,0
hard_tech_monk_27,3,0
hard_tech_farm_18,3,0
h,42,24
h,42,28
b,37,25
h,33,23
t,35,25
f,41,27
h,36,29
f,42,26
f,42,27
f,42,25
f,41,25
h,44,26
med_tech_basket_15,2,1
hard_tech_basket_15,3,1
d,37,26
h,42,20
f,40,25
f,40,27
h,31,29
c,39,21
easy_exit
h,37,19
m,38,25
med_tech_warant_21,2,1
hard_tech_warant_21,3,1
med_tech_archer_22,2,1
hard_tech_archer_22,3,1
b,37,23
d,36,23
h,27,23
c,33,25
h,42,15
h,42,31
c,38,23
med_tech_heal_23,2,1
med_tech_beetle_17,2,1
hard_tech_beetle_17,3,1
med_tech_spider_18,2,1
hard_tech_spider_18,3,1
t,29,25
h,47,22
b,36,21
t,40,17
d,34,27
h,27,19
t,39,25
h,22,26
med_tech_cstl_23,2,1
hard_tech_cstl_23,3,1
med_tech_warant_21,2,1
hard_tech_warant_21,3,1
med_tech_archer_22,2,1
hard_tech_archer_22,3,1
med_tech_beetle_17,2,1
hard_tech_beetle_17,3,1
med_tech_spider_18,2,1
hard_tech_spider_18,3,1
med_tech_monk_27,2,1
hard_tech_monk_27,3,1
exit,2
c,36,27
h,30,22
c,30,25
exit,3]]
-->8
addpos[[ladyb_$,15,5
ladyb_$,24,7
ladyb_$,30,5
ladyb_$,23,16
ladyb_$,29,24
ladyb_$,17,22
ladyb_$,40,15
ladyb_$,8,16
grp>b,6,28
grp>b,10,22
grp>b,1,23
grp>b,20,22
grp>b,10,13
grp>b,23,13
grp>g,10,27
grp>g,18,27
grp>g,18,21
grp>g,10,18
grp>g,25,14
grp>g,24,27
hard_tech_basket_15,3,0
hard_tech_heal_22,3,0
hard_tech_warant_20,3,0
hard_tech_archer_21,3,0
hard_tech_beetle_16,3,0
hard_tech_spider_17,3,0
hard_tech_monk_27,3,0
hard_tech_farm_18,3,0
h,9,27
h,4,27
b,9,23
h,2,23
t,12,24
f,5,26
h,10,21
f,5,25
f,6,25
f,7,25
f,5,27
h,5,28
med_tech_basket_15,2,1
hard_tech_basket_15,3,1
d,10,23
h,2,26
f,6,27
f,7,27
h,14,28
c,7,20
easy_exit
h,15,21
m,9,24
med_tech_warant_21,2,1
hard_tech_warant_21,3,1
med_tech_archer_22,2,1
hard_tech_archer_22,3,1
b,7,22
d,7,23
h,18,28
c,14,25
h,9,17
h,18,20
c,10,25
med_tech_heal_23,2,1
med_tech_beetle_17,2,1
hard_tech_beetle_17,3,1
med_tech_spider_18,2,1
hard_tech_spider_18,3,1
t,5,21
h,5,16
b,12,26
t,7,17
d,13,23
h,21,24
t,8,25
h,21,20
med_tech_cstl_23,2,1
hard_tech_cstl_23,3,1
med_tech_warant_21,2,1
hard_tech_warant_21,3,1
med_tech_archer_22,2,1
hard_tech_archer_22,3,1
med_tech_beetle_17,2,1
hard_tech_beetle_17,3,1
med_tech_spider_18,2,1
hard_tech_spider_18,3,1
med_tech_monk_27,2,1
hard_tech_monk_27,3,1
exit,2
c,5,23
h,5,31
c,8,18
exit,3]]
-->8
--render/derender

function derender()
	if peek(0x2000+80)==67 then
		print("map ok\n")
		return
	end
	
	print("detected backup map!")
	print("derendering (restoring map)")
	--copy saved map back to
	--original location
	for y=0,31 do
		memcpy(
			0x2000+y*128,
			0x2050+y*128,
			48)
					
		--fill fog so backup map
		--is now inactive
		memset(0x2030+y*128,67,48)
	end
	
	if not step_mode then
		write_self()
	end
end

function assertandsave(x,y)
	if not x then
		write_self()
	end
	assert(x,y)
end

function render(n,max_bo)
	if peek(0x2000)!=190 then
		if not max_bo then
			print("backing up map")
		end
		--renders on top of live map
		--to make it easier to do
		--building placement.
		
		--first copy original map over a
		--to a safe zone (over fog and
		--bo encoding) so that we can
		--restore it later in derender
		for y=0,31 do
			memcpy(
				0x2050+y*128,
				0x2000+y*128,
				48)
		end
	end
	
	if not max_bo then
		print("rendering position "..n)
	end
	
	--mark a render
	mset(0,0,190)
	
	local p=pos[n]
	local units={
		{194,1,1}, --1: hill (mound)
		{224,1,1}, --2: farm
		{226,1,1}, --3: barracks
		{210,1,1}, --4: den
		{225,1,1}, --5: monastary
		{195,1,2}, --6: tower
		{192,2,2}, --7: castle
		{212,2,1}  --queen
	}
	local function set(x,y,s,i)
		local ctx="pos"..n.." l#"..i
		--bug
		if s!=198 then
			if fget(mget(x,y),0) and
				not fget(mget(x,y),2) and
				not (
					(s==196 or s==197) and
					fget(mget(x,y),7)
				) then
				assertandsave(
					false,
					"spot taken: "..ctx
				)
			end
		end
		assertandsave(
			x<mapw and y<maph,
			"spot off-map: "..ctx
		)
		mset(x,y,s)
	end
	function render_unit(u,x,y,i)
		local s,w,h=unpack(u)
		set(x,y,s,i)
		if w==2 then
			set(x+1,y,s+1,i)
			if h==2 then
				set(x+1,y+1,s+17,i)
			end
		end
		if h==2 then
			set(x,y+1,s+16,i)
		end
	end
	
	local startx,starty=startpos(n)
	render_unit(
		units[8],
		startx\8,starty\8,
		0)

	for i,xy in inext,p do
		if max_bo and i>max_bo then
			break
		end
		local x,y=unpack(xy)
		local _,b=unpack(bo[i])
		if b==10 then
			set(x,y,198,i)
		elseif b==98 then
			set(x,y,196,i)
		elseif b==103 then
			set(x,y,197,i)
		elseif b<=7 then
			render_unit(units[b],x,y,i)
		end
	end
	
	if not max_bo then
		write_self()
	end
end
-->8
function analyze()
	local p1,p2,p3,p4=
		acorner(1),
		acorner(2),
		acorner(3),
		acorner(4)
	printh(p1..","..p2..","..p3..","..p4,"log")

	--hide "done" msg
	cursor(-100,-100)
end

w,h=mapw/2,maph/2
function get(x,y)
	local typs={}
	for dx=0,w-1 do
		for dy=0,h-1 do
			local t=mget(x+dx,y+dy)
			if fget(t,2) then
				add(typs,"r")
				sset(dx,dy,8)
			elseif fget(t,3) then
				add(typs,"g")
				sset(dx,dy,3)
			elseif fget(t,4) then
				add(typs,"b")
				sset(dx,dy,4)
			elseif fget(t,5) then
				sset(dx,dy,1)
				add(typs,"u")
			elseif fget(t,0) then
				sset(dx,dy,5)
				add(typs,"u")
			else
				sset(dx,dy,7)
				add(typs,"o")
			end
		end
	end
	return count(typs,"r"),
		count(typs,"g"),
		count(typs,"b"),
		count(typs,"o"),
		count(typs,"u")
end

function startpos(p)
	local sx,sy=6,5
	local x,y,qnx,qny,cx,cy
	if p==1 then
		x,y=0,0
		qnx,qny=sx,sy
		cx,cy=10,5
	elseif p==2 then
		x,y=mapw-w,0
		qnx,qny=x-sx-2,sy
		cx,cy=100,5
	elseif p==3 then
		x,y=mapw-w,maph-h
		qnx,qny=x-sx-2,y-sy-1
		cx,cy=100,68
	elseif p==4 then
		x,y=0,maph-h
		qnx,qny=sx,y-sy-1
		cx,cy=10,68
	end
	local startx,starty=
		(x+qnx)*8+7,
		(y+qny)*8+4
	return startx,starty,
		x,y,qnx,qny,cx,cy
end

function acorner(corner)
	--clockwise from top-left
	local startx,starty,x,y,
		qnx,qny,cx,cy=
		startpos(corner)
	cursor(cx,cy)
	
	local r,g,b,o,u=get(x,y)
	sset(qnx,qny,9)
	sset(qnx+1,qny,9)

	print("pos "..corner..":\|j",7)
	print("r:"..r,8)
	print("g:"..g,3)
	print("b:"..b,4)
	print("o:"..o,7)
	print("u:"..u,5)

	cx,cy=print("")
	sspr(0,0,w,h,cx,cy-4)
	sspr(0,0,w,h,43+x,5+y)
	
	--for camera
	startx-=64
	starty-=64
	return startx..":"..starty
end
__gfx__
000b0000d000000000000000000000000000000000d0000000000000000000000000000000100010000000000000000000000000011000110000000000000000
00b330000d000000d00000000000000000000000000d00000d011100000000000011000000010100000000000110001100000000000101000000000000000000
0b333300005111000d000000dd0000000000000000005110d05111100d0000000111100000010100001110000001010000111000004444000000000000001010
b44444500051111000511100005111000000000000005111005d1110d01111000111101110444400011110111044440001111011104e4e000011000111014441
0411d4000001111000511110005111100d51110000000d11000000d005111d0001101441144e4e0001101441144e4e000110144114044000011111441141e4e1
0411d400000d1d10000d1d100001d1d0d051d1d00000000d0000000005d110000000544005044000011054400504400001105440505005000115054450504400
04444400000000000000000000000000000000000000000000000000000000000005050050500500000505005050050000050500000000000000000000000000
00444000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000800000008000080000000000000000000000000000000000000000010050000000000000000000000000000000000000000000000000000
000000000000000088000800880008800000000050000000000080000000000000000000115000000000000000000000000000000000000000d0000000000000
11000000110001101100880011000110110001100110511081101100000000000000000003300000000000000000000000d00000000000000d00000000000000
0011111100110011001111110011001180110811001100110011001100000000000000000011500000d00000000000100d000000000000003310000000000000
0b0000000b0000b004000000040000400000000000000000000000000000000000000000001300000d0000000001131133100000000000003311310000000000
bb000b00bb000bb04400040044000440000000000000110000000000000000000dd1311331350000331131131131135033113113113113100011311311311310
1100bb00110001101100440011000110000000000110001011101100000000003311311331105000331131131130500000113113113113110505001311311311
00111111001100110011111100110011015500000011000100010011000000003305005050500000050500505050000000505050505050500000005050505050
00000000000000000000000000000000000000000000000000000000000000000005050000505000000000000000000000000000000000000000000000000000
05050500000000000000000000000000000000000000000000000000000000000550151005015150005050500888800008888000008888000000000000000000
5015105005050500005050500050505000505050050505000505050000000000500d15150501515005015105888e8800888e8800088e88800000000000000000
50151050501510500501510505051105050511505015150050115050005050000000d50550d0d005050151058e88e8008e88e8ee08e8e8ee0000000000000000
5005005050151050500151055005110505051150501515005011505005151500000000050000000505dd0005888888ee8888887e0888887e0000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000005050507e50505000050505000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000d11311311311310
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000033d1515351515351
0000000000000000000000000000000000000000d000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0d000000000000000000000000000000dd0000000d00000000d0000000000000000000000000000000d000000000000000000000000000000000000000000000
d00001100d0000000dd000000000000000310011003100110d0000000000000000d00000000000000d0000000000000000d00000000000000000000000000000
31000110d0000110d00001100000000005d1001105d1001133000000000000000d0000000000000033100000000000000d000000000000000000000000000000
0d11110031111110311111100d000110505d1110000d111033100000000000013310000000000000331131000000000033100013113000000dd0000000011310
001d1d000d1d1d0001d1d1d0d3d1d1100000d1d00050d1d001113113113113113311311311311310001131131131131033113113113113103311311311311311
00000000000000000000000000000000000000000000000000513113113113500011311311311311050500131131131100113105050113113311311311350505
00000000000000000000000000000000000000000000000005005050505050000050505050505050000000505050505000505000000050500050505050500000
000000000000000000000000eeeeeeeeffffffffffffffffffffffff00000000ffffffffffffffffffffffff113331dd11111dd1ffffffffffffffffffffffff
004880000048008000400880eeeeeeeeffff6fffffff6fffffffffff00000000fffffdffffbffffffff33fff1338311111511151ffffffffffffffffffffffff
004888800048888000488880eeeeeeeefffffffffffff5ffff2fffff00000000ffffd6dffffbf3ffff3993ff3bfbfb1111154511ffffffffffffffffffffffff
004888800048888000488880eeeeeeeef6fffffff6f5fffff292ffff00000000fffffd3ffffb3fffffbaabff33bbb33311114111ffffffffffffafffffffffff
004008800040880000488000eeeeeeeeffffff6ffffff5fff32fffff00000000ffffff3ffffb3fffffbaabff33bbb33311154511ffafffffffffffffffffffff
004000000040000000400000eeeeeeeeffffffffff5fff6ff3ffffff00000000ffafffffffffffffffbbbbff33bbb33311514151ffffffffffffffffffffffff
014100000141000001410000eeeeeeeefff6fffffff6ffffffffafff00000000fffffffffffffafff333333f1b333b3111121211ffffffffffffffff7fffffff
011100000111000001110000eeeeeeeeffffffffffffffffffffffff00000000ffffffffffffffffffffffff11333311dd1111ddffffffffffffffffffffffff
fff88fffffffffffffffff8fffffffffffffbbbfffffffffffffffffffffffffffffffffffffffffffffffff1111d111111d1111ffffffffffffffffffffffff
f887888ffffffffff8fff888fffffffffffbb3bff33fff33ffff44ffff444ffffffffff6776fff766fffffff1dd1111111111dd1ffffffffffffffffffffffff
87887878fff888ff888ff888ff888fffffbb3bbff3bff3bbf4f4444fff444ffffffff7666cc666cc667fffff1111111cc1111111ffffffffffffffffffffffaf
88788788ff88188f888f8fdff88188ffffb3bbbfffbbfbffff44454ff4494fffffff67cccccccccccc76ffff1111cccccccc1111fffff7ffffffffffffffffff
fff77fff1181881ffdf888dff1881811ffbbbbfffffbbbfff444544fff544ffffff76ccccc6cc6ccccc67fff111cccccccccc111fffffffffffffaffffffffff
ff7777ff1685858ffdd888dff8585861fffbbfffffffbfff499544ffff9444fffff6cccc6ccc6ccccccc6fff1d1cccccccccc1d1ffffffffffffffffffffffff
fff77fffffffffffffdfdfdffffffffffffbffffffffbfff49944fffff5444ffff66cccc7cccc11ccccc66ff111ccc6666ccc111ffffffffffffffffffffffff
fff77fffffffffffffffdffffffffffffffbffffffffbffff444ffffff445ffff6c7ccc1111111111ccc7c6f11ccc667766ccc11ffffffffffffffffffffffff
fff88ffffffffffffffffffffffffffffffffbfffffffffffffffffffffffffff66ccc111111111111ccc66f11ccc667766ccc11ffffffffffffffffffffffff
f887888ffffffffff8fff88fffffffffffffb3fffffffffffffff4fffff4fffff6ccc6111dd11111116ccc6f111ccc6666ccc111fffffffffffffffff7ffffff
ff8878f8fffffffff88ff888ffffffffffff3bbff3bfff3ffff4f44ffff44ffff7cccc111166111111cccc7f1d1cccccccccc1d1ffffffffffffffffffffffff
f8788fffff8815ff888f8fdfff5188ffffb3fbfffffbfbffff44454fff494ffff6c6cc111111111111cc6c6f111cccccccccc111ffffffffff7fffffffffffff
fff77ffff121885ffdff88dff588121fffbbbbfffffbbbffff4454ffff544ffff66ccc1111111dd111ccc66f1111cccccccc1111fffaffffffffffffffffffff
ff77ffff1585858fffd88fdff8585851fffbbfffffffbffff495ffffff9444ffff6c6cc1111111111cc6c6ff1111111cc1111111ffffffffffffffffffffffff
fff7ffffffffffffffdfdffffffffffffffbffffffffbfff49944ffffff44fffff6cccc111dd111111ccc6ff1dd1111111111dd1ffffffffffffffffffffafff
fff77fffffffffffffffdffffffffffffffbffffffffbffff444fffffffffffff76c6c111111111111c6c67f1111d111111d1111ffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6c7ccc1111111111ccc7c6fffffff5ffffffff5ffffffffffffffffffffffff
ffff8ffffffffffffffff8ffffffffffffffbfffffffffffffffffffffffffffff66ccccc11cccc7cccc66ff6f555fff6f5555ffffffffffffffffffffffffff
ff88f8fffffffffff8ffff8fffffffffffff3bbffffffffffff4f4fffff44ffffff6ccccccc6ccc6cccc6ffff55555f5f533555fffffffffffffffffffffffff
f8788ffffff884fff88fffdfff488fffffb3fbfffffffbfffff4444fff494ffffff76ccccc6cc6ccccc67ffff555565ff535535fffffffffffffffff7fffffff
ffff7fffff21825ffdff8ffff52812ffffffbbfffffbbfffff4454fffff44fffffff67cccccccccccc76fffff565555ff555555ff7ffffffffffffffffffffff
fff7fffff285258fffd88fdff852582ffffbffffffffbffff4944ffffff45ffffffff766cc666cc6667ffffff566555ff53555f6ffffffffffffffffffffffff
fff7ffffffffffffffdfdffffffffffffffbffffffffbfffff4ffffffff4fffffffffff667fff6776fffffffff5555f6ff555fffffffffffffffffffffffffff
fff77fffffffffffffffffffffffffffffffffffffffbffffffffffffffffffffffffffffffffffffffffffff6ffffff6fffff5fffffffffffffffffffffffff
000000000000000060000606000000000000000000000000509030b0505599880000000000000000000000000000000000000000000000000000000000000000
0000000000000000074444700000000000000000000b000000000000550599880000000000000000000000000000000000000060000000000000000000000000
007440700000000074411440000000000000000000b3300009999990055555500000000000000000000000000000000000000000000006000000000000000000
07411400000000004411114400000000000000000b33330099799799556556550000000000000000000006000006000000000000000000000000000000000000
0415114000047000471551140000000000000000b444445097d77d79565665650000000000000000000000000000000000000005000000000000000000000000
04111140004144007415514600000000000000000411d40099411499554114550000000000000000000050000000050000000060000000500000000000000000
07411400004444000741144005000500000000000411d40099444499554444550000000000000000000000600000000000000000000000000000000000000000
00000000000000000000000004444400000000000444440009999990055555500000000000000000000600000000000000000000000000000000000000000000
00000000000000000000000004111400000000000411d40000000000000000000000006000060060000506000005605000000605000005000000000000000000
00000000000000000000000004444400005050000444440009999990055555500006060000056506005605000000056500006060000000060000000000000000
00000000000000000004000000414000004140000041400099299299552552550005656000505050000056500060600000000000000000000000000000000000
00040000000000000041100000444000004140000044400099299299552552550050555000a00500006060000000000000000000000000000000000000000000
00411000000400000451140000414000004140000041400099d44d9955d44d5500a0aa000aaa0aa000a00a0000a0050000000500000000000000000000000000
04511400004110004554454000414000004040000041400099444499554444550a9aa9a50a99a9950a95a9a5059a59a505a65a65007505000075050000750500
45544540045114005454545000000000000000000000000009999990055555505989989559899895598998955a89a895569a69a5057657600576576005765760
00000000000000000000000000000000000000000000000000000000000000002822282228828822228282822522852255285252565765755657657556576575
00000000000000000000000000000000000000000000000000000d0d000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000500050000000000000000000b030b0000000d0d00000d0d0000000000000000000000000000000000000000000000000000000000000000
0000000000000000575057500000000000000000b03330b00001325200000d0d0000d0d000000000000000000000000000000000000000005050500000505050
0500050000000000747074700b030b0000000000b11311b0001330500011325200000d0d00000000000000000000000000000000000000004040400000404040
04000400000000000400040004111400000b0000041114000133bb00013330500113325200000000005000000000000000000000000000000444000b00044400
01111100001110004111114040111040001110004011104013300b001333b0001333305001113d0d05150000000000000000000000000000041400b350041400
44111440501110504d111d404040404004404400404040401350b00013500b003535b0000353b2520414000300000000000000000000000004140b3335041400
40404040404040404d404d40000000000000000000000000350500003505bb00505bb000353bb050044403313300000000000000000000000444b33133544400
00000000000000003453345334533453345334533453345303033450000600000006050000050006041405111505000000000000000000000414051115041400
434b4043434040b04533453345334533453875334533453343434345000006000005606000006050041455555554050000000000000000000414555555541400
554355b343b300005334533453345334587887845338733455435533000060000050500000a00000044454545454440000000505050000000444545454544400
34435343044043b0334533453347884538888885338888453443534000a00a0000a0a000000a0a00044444444444450000000444444005000444444544444500
3b0b40550300b0b434533453345888533437745334537453033443550099a0000a9aa9000099a900045444414444440000005441444055000454445154444400
455b3453b0b0044045334533453375334537753345374533455334530a889000098890000a899000044444111444540005004411144044000444451115445400
454445b3b04b40005334533453347334534773345347733445444533009200000029000000280000044544111444440004404411144044000445451115444400
05335540030033b03345334533453345335333453353334505035540000000000000000000000000000000000000000000000000000000000000000000000000
fffffffffffffffffffffffffff0ffff8888888888888888ffffffff000000000000006000000000000000000000000000000000000000000000000000000000
0f0f0fffff0f0f0ffff0ffffff0b0fff8824488882288228f888ffff000000000000060000000000000000000000000000000000000000000000000000000000
505050fff0505050ff040ffff0b350ff88444888823882388808800f000000000000060000000000000000000000000000000000000000000000000000000000
404040f0f0404040f04220ff0b33350f84494888883383888080870f000000000000060000000000000000000000000000000000000000000000000000000000
04440f0b0f04440f0452240fb4444450884448888883338888885fff000000000000006000000000000007777700000000000777770000000000077777000000
042400b35004240f055445400422d40f88944288888838885f5fffff000000000000000600000000000076676670000000007997667000000000766799700000
04240b333504240f045454500422d40f8844448888883888ffffffff000000000000000600000000000766676665000000079997666500000007666799950000
0444b3323354440f000000000444440f8888888888888888ffffffff000000000000006000000000000766676665000000079997666500000007666799950000
042405222504240ff000000f0422d40fff00fffff00fff0000000000000000000000006000000000000766676665000000079997666500000007666799950000
042455555554240f004444000444440ff0220fff0220f02000000000000000000000000600000000000777777775000000077777777500000007777777750000
044454545454440f044224400042400f02222f000002020000000000000000000000000000000000000666666665000000066666666500000006666666650000
044444454444450f44222244f04440ff022220222044440f00000000000000000000000000000000000666686665000000066668666500000006666866650000
045444525444440f47255224f04240ff022024422442420f00000000000000000000000000000000000666a7e6650000000666a7e6650000000666a7e6650000
044445222544540f74255246f04240ff00005440050440ff000000000000000000000000000000000006666c666500000006666c666500000006666c66650000
044545222544440f07422440f00000ffff0505005050050f00000000000000000000000000000000000066666660000000006666666000000000666666600000
000000000000000ff000000ffffffffffff0f0ff0f0ff0ff00000000000000000000000000000000000006666600000000000666660000000000066666000000
04533453f00000fff0fff0ff00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
053345330b030b0f050f050f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
03345334b03330b05750575000000000000000000000000000000000505050000050505000000000000000ddd000000000000000000000000000000000000000
03453345b22322b074707470000000000000000000000000000000004040400000404040000000000000dd555dd0000000000000000000000000000000000000
045334530422240f040f040f000000000000000000000000000000000444000b0004440000000000000d5555555d000000000000000000000000000000000000
05334533402220400222224000000000000000000000000000000000041400b3500414000000000000d555111555d00000000077700000000000000000000000
03345334404040400d222d400000000000000000000000000000000004140b33350414000000000000d551111155d00000000767670000000000000000000000
000000000000000f0d404d40000000000000000000000000000000000444b33133544400000000000d55111111155d0000007676766000000000000000000000
000000000000000000000000000000000000000000000000000000000414051115041400000000000d55111111155d0000007767666000000000000000000000
000000000000000000000000000000000000000000000000000000000414555555541400000000000d55111111155d0000007676666000000000000000000000
0000000000000000000000000000000000000000000000000000000004445454545444000000000000d551111155d00000000766660000000000000000000000
0000000000000000000000000000000000000000000000000000000004444445444445000000000000d555111555d00000000066600000000000000000000000
00000000000000000000000000000000000000000000000000000000045444515444440000000000000d5555555d000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000444451115445400000000000000dd555dd0000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000044545111544440000000000000000ddd000000000000000000000000000000000000000
__gff__
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000041a1a1000000072707270b0b13130121012121000000072707270b0b131321a1212121000000072707270b0b13130121010101000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000098000000000000000000000000000000ff000000000000000000000000000000
__map__
7f5757577f4e5d4d6e4d55544d575756567b7c7b7b7b7b7b7b686969696a5657575756565d4d6d4f7e56575757575757434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343000a000a000a000a000a000a000a000a00650065006500650065006500630063
5756575756575d5d48555454544d565757567c7c7b7c7c7c586c69695b7a55525656565d4e5f5e5f5d7e5757575257564343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343430063006300630063000f00160014001500100011001b00120501080108030b01
5757525757576e6f6d545055544d4e57576d6d527b7c7b7b684c694b6a55555d6e6f6d6d5e464d7d7d5d5656575757574343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343430c060f02100110021002100210021501150f150f160417011702180219011a07
56575657577d7e507d545555554d4f4d4e7d555554547b7c6869695b7a5554547e7f7d7d6e7d4f504d6d6d6e7d57565743434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434300991f011f051f151f151f161f16200322042401270728012b012b072b172c11
575756564d4d4e4f4d4d55544f4d4d5d494d5455545454497879797a5554544f4d4d4e4f7e4d5f5d5d7d7d52526d57574343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343432c112d122d122d0630013103320634043501350639013a173a173e153e154016
7f57575f5d5d7e5f5d5d5e5f5d5d5e6d6e6d5d55554d4d4e4e555554545f5d5d5e5f485d4e5d5d6d6d6e6f5f7d7d575643434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434340164211421144124412461b461b00994b074b01500700990000000000000000
4f4e6e52526d6e6f6d6d6e4d4d4e487d7e4d4d4e4d7d6f6d7d7e4d4d4e4f4d4d4d4f6f6f6d6d7f7d7d7e7f7f555555574343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343430f0518071e0517101d181116280f081004050d020b09140716111f0908031105
4d5d7e7f7d7d7e7f527e7f5d5d5e5f5d5e5d5f5e5f7d4d567f6f5d5d5e5f5d5d5e5f4d7f7d7d7e7f7d507e555550545543434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434312090a0d17121d06030003000300030003000300030003000404080209070904
6f7f4e5d5e5f7d4f4d4e4f6d6d6e4f4d5d6d7d6e6f5756575657524d6e6f486d6e4d564d4d4d4e4f4d4d4e55555555554343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343430b0606060b0a0604070405050506010802010301090603050504080405030809
7d5454465d7d7e5f5d5e5f7d4d5757574d7d7d7e7f565757575757574e4f7d7d4f56575756485e5f5d5d5e7f5455554f43434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434301000e02070702010301020103010808070800050d0511041009040802010201
5755555859595a6f6d6e6f5e5756575657554f4d4d495657575757575e4d4d4e5757565757564d4d4e4f4e6f6d6d6f6e4343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343430301020103010c080a0e0f0711060f061607070c090002010301020103010201
575748684c696a7f7d7e7f5757575657575454557f7e4d575757566d6e5d54545757575757575d5d5e465e4f5d5d5e5f434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343030102010301020103010201030102001207050f080c03000000000000000000
5d575768695b7a4f4d4e4f5657575859595a54547e4e4f4d564e7d7d7e55555455575658595a506d6e6f6e5f545450494343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343430f0518071e0517101d181116280f08102a03240722021c0825141b152a072004
5d4e5578797a525f5d5e5f4d46526869696b5a54555e5f5d5d5f7e7f7d5455555548586c696b5a497e7f7e54555859594343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343431d0a271115061711030003000300030003000300030003002b032b0626062c03
4d5d5d55554d6d6f6d6e6f5458596c694c696a467c4d7f5d5d5e6f466e55585959596c694b696a4d4e4f4d55586c696943434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434324052904240828042a042a05290620020201030126052d05270527042d0a2708
5d505e5454497d7f7d7e55546869696969696a7b6e7e4d5f49487f4e7c586c694c696969695b7a5d5e5f5d55684c4c6943434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434301001f0a26040201030102010301250725041d0522052a0c2710260202010201
7d7d5446554d7e4f4d4d555468694b69695b7a487e4e5d494a7d7d4d546869694b69695b797a554d4e4f6d5468694c694343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343430301020103012a08290329081f0627061a08290c2b0502010301020103010201
4d55505454524e5f5d5d5554785c6969696a54544e5e5d4e7f497f545568696969694c6a5455555d5e5f7d50785c696943434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434303010201030102010301020103010200280a2403210303000000000000000000
4d565859595a484d4e4f4d5756787979797a55545e4f487d464d4d545568695b7979797a54546d6d6e6f4d57577879794343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343430f0518071e0517101d181116280f0810291c22172a131b16190d260a2917201d
575768694b6a4d5d4d4d5757565657505555556d6e5f7f4f5d5e5d4d5578797a57575750544d4e4f494f5d5d4657575643434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434326132a0e16121b0e030003000300030003000300030003002a182a1c25192117
57557879797a5d6d5d5d56575757577d7b547d4d6d7d575657566d4d55555757565757575d5d5e5f5e5f6d55555456564343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343432319291b241d2a1a2a1b2a1929192c1a02010301251a2a142819281b1f1d2715
56575755554d6d7d6d6d4d575657564d4d7f7d5d7d57575756574d4d4d525757575756566d6d6e6f6e6f55545555557f4343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343430000251326190201030102010301251724171b1721192a0f2a1f261702010201
565656545d497d4d7d7d6e4d57575f5d5d4d4e6d4e5657575757576e4d4d4e565756574d4d4e4f7f7e7f55545054556f4343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343430301020103011d192f1624152811221b1b132719161a02010301020103010201
574d4e4f7d7d5d5d4d4d5d5f6d6d6e4d5d5d5e7d5e5757565757565f5d4e7d5e564d4e5d5d5e5f7f7d7d545554554f7f43434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434303010201030102010301020103010200241b1e161e1903000000000000000000
5d5d5e5f4d4d6d6d5d5d5e5f7d7d7e497b4d6e4d6e6f565757566d6f6d6d6e4d4d4e4f6d486e6f504d4d4e4d4d4d4e4f4343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343430f0518071e0517101d181116280f0810061c0a16011714160a0d170d0a1b121b
6d6d6e52525d7d7d4d504d4d4e4f4d4d497d7e7f4d7f5e5d7d7d7e7f7d7d7e5d5d5e5f7d7d7e7f5f5d5d5e5d5d5d5e5f43434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434312150a12190e181b03000300030003000300030003000300091b041b09170217
7d567e4d4e6d4d4d7d7d5d5d5e5f5d5d6d466e6f4e4f6e7f494d4d4f4d4d4e6d6d466f5d5e5f6e6f4d4e6e504d5657564343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343430c18051a0a15051906190719051b051c020103010a17021a061b071b0e1c0714
565757567d7d5d5d5e5f6d6d6e6f6d6d7d7d6d7e5554557c6d6d6e5d4d555d6d6d4e7f6d6e6f7e7f7d7d7e4d5757565743434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434300000f150918020103010201030107160717121c0e19091112140a1902010201
57565757574d4d524f545455557e7d7d7e7f7d555454545859595a4655544d7d7d5d7d7d7e7f52524d4e4f5757575757434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343030102010301051505100c1a07110d1715180819151402010301020103010201
5757525757565d5e5f55555054555d7d7e7f7d555458596c694c6b5a5555545d5e7d7e7f4e4f5e5d5d5e565757525757434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343030102010301020103010201030102000517051f081203000000000000000000
5757575657566d6e496d555454554f6f6d6d5055586c69694b69696a55505d6d6e4d5454544e5d6d6d6e5757565757574343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343430000000000000000000000000000000000000000000000000000000000000000
7d565757577d7d7e7f7d7e5555547e7f485859596c6969696969696b595a4d7d4655545555546d7d497e7f575657567f4343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343430000000000000000000000000000000000000000000000000000000000000000
__sfx__
0104000026043260431f003200032604326043260432603329003290032800327003250032200320003200031f0031e0031e0031f00320003220032400324003210031d0031b0031900317003170030000300003
010400002604326043260331770013700127001270012700007000070000700007000070000700007000070000700007000070000700007000070000700007000070000700007000070000700007000070000700
4d0300001a5502655026550005001a5001a5001a500005001a5001a5001a500005000050000500005000050000500005000050000500005000050000500005000050000500005000050000000000000000000000
490900001a63432625180001a0001a000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
5d040000260532605332043320330e6000e6000960000300091000000037600091000e6000e6000960000300091000030032600266000e6000e60002600026030910000300376030030037600376003f60000000
79170000091730010032502266000264002611096010030309173000003760009100026400261109601003000917300300326002660002640026110260102603091730030037603003002b6132b6113f60100000
79170000091731d0301c0201a0200264002611096011d02209173180200e532105300264002611096011802009173210201d0202102002640026110260102603091731800028732297312b6132b6113f6011f022
7917000009173185301a5311a5220264002611096011d53009173175301853118522026400261109601135300917317530185301a5320264002611026011d530091731a5301d530215322b6132b6113f60121000
411700000206002060020620206202062020600206002060020600206002062020620206002060020620206002060020600206002062020620206202060020600206202062020600206002062020620206202060
391200000e5640e5600e5500e5520e5420e5300e52500000155541554015542155321552015520155250000013554135401354213532135321353213530135251154411540115451354413540135451554415545
9105000028063286431c0531c60000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
011700000e5500e5500e5520e5451555015550155401554213550135401354213532135350000011550105500e5500e5420e535105500e5500c55011550135501855018550185421853217550135501055010540
011700000e5500e5520e5520e5400e535000001155011540105501054010535000000e5500e5520e5400c5500e550105501155011540105501055210545105001355013550155611555215545135001155010550
011700001113010137131300e1300e1300e1320c1300c11511130101311012513130131371113011130101310e1301113710130131301313011130111300c1310e1300e1300e1250010011137101300e1370c130
011700000e1301013711130131300e1300e1321513015130131301113011115131301313711130101301813118130151301513015135131371513011130181311813017130171351310011137101300e1370c130
011700000e1501015711150131500e1500e152151501515013150111501b100131501315711150111501015115152151521513015125131571515011150181511815015150001000010011157101500e1570c150
050600001107100001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
01020000052670061710267006171236700617123570161712357016170a157006170d147006170d147006170b047006170b037006170a037006170a727006170b727006170c717006170b117006170811700617
010600000e5511a555000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
91040000154400e4501a4600e4201a4600e4501a4400e433164001f400174001440018400154001940016400114001a4001e4001b40018400214001940022400144001d400154001e400164001f4001740020400
010a00000e7140e7120e7220e7220e7320e7320e7420e7420e7420e7420e7320e7320e7220e7220e7120e715147000c7000870005700027000170000700007000070000700007000070000700007000070000700
191700000e5600e5600e5620e555180001800018000131300e130111301313015130151321513213130111301313013132131321313511130101300e1370c1300e1300e1320e1320e13511564115601156211555
191700000e5600e5600e5620e55518000180000c0000c1300e1301113013130151301513215132131301113018130181321813218135101301313715130171301a1301a1321a1221a11311564115601156211555
411700000e5600e5600e5620e555180001800018000131300e130111301313015130151321513213130111301313013132131321313511130101300e1370c1300e1300e1320e1320e13511564115601156211555
4117000010552115570e5400e5400e5420e5450c0000c1400e1301113013130151301514215142131401114018140181421814218145101401314715140171401a1401a1421a1421a1421a1321a1230b5500c550
79170000091730e1000e1300e13302640026110960100303091730e1450e1450e14502640026110960111100091730e1450e1450e1450264002611026010e700091730e1450e1450e1452b6132b6110c11100000
49040000131500e140131500e14011150151401a1501a1401a100261001a100001000010000100001000010000100001000010000100001000010000100001000010000100001000010000100001000010000100
031900001511617126181461a15718167171571514717143111330e1130e100001000010000100001000010000100001000010000100001000010000100001000010000100001000000000000000000000000000
49190000091730010000000376002b613001002b61300303091730000037600000000264002621376000000009173003002b6132660000000026400261102603091730030037603003002b6132b6102b61500000
01190000020700207002072020720207202070020700207010061100601006210062100601006010062100600c0610c0600c0600c0620c0620c0620c0600c0600b0620b0620b0600b0600b0620b0520b0420b030
b91900000e254102500e257102520e242102400e2300e220152541524015242152421524215230152301523513254132401524217232172321023613230102200c2400c2400e2401324013240132471524015245
011900000207002070020720207202072020700207002070100611006010062100621006010060100621006013051130501305013052110521105212050120500e0520e0520e0500e0500c0520c0520e0620e050
b91900000e254102500e250102520e242102400e2300e2201525415240152421523217227172201722515200132541324015242182361d2321d2321e2301e2200c2400c2400e2401724017247172401524215245
490900001a5561c556265561f55600500005000050000500005000050000500005000050000500005000050000500005000050000500005000050000500005000050000500005000050000500005000050000500
110b00001f077190771d0771a0671f067210671805719057297002970000700007000070000700007000070000700007000070000700007000070000700007000070000700007000070000000000000000000000
c51700000216502165001000010000100001000015000150021650216500100001000010000100001000010002165021650216500100051650210000150001500216502165001000010000100001000010000100
490900001a644326351a644326350960000300091000000037600091000e6000e6000960000300091001f60013600026000e6000e600026000260009100003001f6002b6001f6001f6003f600000000000000000
01170000091630010037500375000264002635026450e6000916300000375000910002640026350960137500091631f625136003750002640026350260137500091630e6340e6350e6000e600026451f62300000
110500002b5462b54609503005002b5462b546095030050037500375000950000500005000050000500005001f000210001d000180001f000210001d000180000050000500005000050000500005000050000500
0117000000000000000e050110501505015052150521505215045000001305011050130500e056110501105211052110450c050100501004011050130500e056100500c0500e0500e0500e0520e0520e0500e045
c51700000216502165001000515004150041450015000150021650216500100001000015004155041550010002165021650216500100051650210000150001500216502165001000010000000021550515507155
1117000000000000000e050110501505015052150521505215045000001305011050130500e056110501105211052110450c050100501004011050130500e056100500c0500e0500e0500e0520e0520e0500e045
2917000010552115570e5400e5400e5420e5450c0000c1300e1301113013130151301513215132131301113018130181321813218135101301313715130171301a1301a1321a1321a1321a1221a1131104411052
0d1700001d0401c0471f0401a0401a0401a04218040180251d0401c0411c0351f0401f0471d0401d0401c0411a0401d0471c0401f0401f0401d0401d040180411a0401a0401a035180001d0471c0401a04718040
0d1700001a0401c0471d0401f0401a0401a04221040210401f0401d0401d0251f0401f0471d0401c0401804118040150401504015045210401c0401d0401804118040170401704500000210401c0401f0411f042
191700000e5000e5000e5000e500180001800018000131300e130111301313015130151321513213130111301313013132131321313511130101300e1370c1300e1300e1320e1320e13511564115601156211555
7d1700001105010000130500e0500e0500e0520c0500c045110501005110055130000e0550e0550e055100000e0501105710050130501305011050110500c0510e0500e0500e0450c0000c0550c0550c0000c055
7d1700000e05510000130500e0520e055000021505015052130501105011045130000e0750e075100000c0401005110050100550e0000e0750e000180000c050110511105211055110000e0000e0000e00000000
0117000000000000000e0601106015060150621506215062150550000013060110601806017066150601306213062130650c060100601005011060130601506115062100600e0600e0600e0620e0520e0500e045
1517000000000000000e0501105015050150521505215052150450000013050110501805017056150501305213052130550c050100501004011050130501505115052100500e0500e0500e0520e0420e0400e035
011700000916318060110001500002640026350264518050091631a0500c0500e05002640026351505215052091631f6251360013050026400263517050110500916302644026450c0600b070026450907007070
01170000091630c0503750037500026400263518030180350916300000100500e04002640026350c0500c045091631f62513600130500264002635026010c0000916302644026450c0600b070026450707009070
001000000916318060110001500002640026350264518050091631a0500c0500e05002640026351505215052091631f6251360013050026400263517050110500000000000000000000000000000000000000000
__music__
00 05084c44
01 05080b44
00 05080c44
00 19080b44
00 19080c44
00 05081544
00 05081644
00 05081744
00 05081844
00 06080b44
00 07080c44
00 06080b44
00 07080c44
00 05080d44
00 05080e44
00 19080d44
00 19080e44
00 19082d44
00 05081644
00 19081744
00 05082a44
00 19082b44
00 19082c44
00 25082e44
00 25082f44
00 25234344
00 25284344
00 25232744
00 25282944
00 25233044
00 25283144
00 25237244
00 25284344
00 32232744
00 33283044
00 34232944
00 35283144
00 343b2944
00 353a3944
00 19237244
00 19283844
00 05233644
02 05283744
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 1b1c5844
01 1c5e1d44
00 1c481f44
00 1c3c1d44
00 1c3d1f44
00 1c1e1d44
02 1c201f44
03 08484b44

